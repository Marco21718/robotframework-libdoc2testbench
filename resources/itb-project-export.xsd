<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 elementFormDefault="qualified"
 version="1.0">
  
  <xsd:annotation>
    <xsd:documentation xml:lang="en">
      root element: project-dump
    </xsd:documentation>
  </xsd:annotation>
  
  <!--  root element -->
  <xsd:element name="project-dump">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="details" type="details"/>
        <xsd:element name="userroles" type="userroles"/>
        <xsd:element name="UserDefinedFields" type="UserDefinedFields" minOccurs="0"/>
        <xsd:element name="DefectUserDefinedFields" type="DefectUserDefinedFields" minOccurs="0"/>
        <xsd:element name="keywords" type="keywords"/>
        <xsd:element name="labels" type="labels"/>
        <xsd:element name="dm-settings" type="dm-settings" minOccurs="0"/>
        <xsd:element name="error-ids" type="error-ids" minOccurs="0"/>
        <xsd:element name="references" type="references"/>
        <xsd:element name="requirement-baselines" type="baselines" minOccurs="0"/>
        <xsd:element name="testobjectversions" type="testobjectversions"/>
        <xsd:element name="requirements" type="requirements"/>
        <xsd:element name="referenced-user-names" type="referenced-user-names"/>
        <xsd:element name="errors" type="errors"/>
        <xsd:element name="warnings" type="warnings"/>
      </xsd:sequence>
      <xsd:attribute name="version" type="xsd:string" use="required"/>
      <xsd:attribute name="build-number" type="xsd:string" use="required"/>
      <xsd:attribute name="repository" type="xsd:string"/>
    </xsd:complexType>
  </xsd:element>
  
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--  test project properties that are set in the project administration  --> 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <xsd:complexType name="details">
    <xsd:choice>
      <xsd:sequence>
        <xsd:element name="version" type="version"/>
        <xsd:element name="pk" type="xsd:string"/>
        <xsd:element name="identicalVersionPK" type="xsd:string"/>
        <xsd:element name="locker" type="xsd:string"/>
        <xsd:element name="responsible" type="xsd:string"/>
        <xsd:element name="reviewer" type="xsd:string"/>
        <xsd:element name="priority" type="xsd:string"/>
        <xsd:element name="status" type="xsd:string"/>
        <xsd:element name="target-date" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation xml:lang="en">
              a date
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="references" type="references"/>
      </xsd:sequence>
      <xsd:sequence>
        <xsd:element name="name" type="xsd:string"/>
        <xsd:choice>
          <xsd:sequence>
          	<xsd:element name="id" type="xsd:string" />
          	<xsd:element name="testobjectname" type="xsd:string" />
          	<xsd:element name="state" type="xsd:string">
          		<xsd:annotation>
          			<xsd:documentation xml:lang="en">
          				planned, active, finished, closed
          			</xsd:documentation>
          		</xsd:annotation>
          	</xsd:element>
          	<xsd:element name="customername" type="xsd:string" />
          	<xsd:element name="customeradress" type="xsd:string" />
          	<xsd:element name="contactperson" type="xsd:string" />
          	<xsd:element name="testlab" type="xsd:string" />
          	<xsd:element name="checklocation" type="xsd:string" />
          	<xsd:element name="visibleForTesters" type="xsd:string" maxOccurs="1" minOccurs="0"/>
            <xsd:element name="startdate" type="xsd:string" />
            <xsd:element name="enddate" type="xsd:string" />
            <xsd:element name="status" type="xsd:string" />
            <xsd:element name="description" type="xsd:string"/>
            <xsd:element name="html-description" type="xsd:string"/>
            <xsd:element name="testingIntelligence" type="xsd:string" />
            <xsd:element name="createdTime" type="xsd:string" />
            <xsd:element name="settings" type="settings" />
          	<xsd:element name="requirement-repositories"
          		type="requirement-repositories" />
          	<xsd:element name="requirement-projects"
          		type="requirement-projects" />
          	<xsd:element name="requirement-udfs"
          		type="requirement-udfs" />
          </xsd:sequence>
          <xsd:sequence>
            <xsd:element name="project" type="project"/>
            <xsd:element name="lastUpdate" type="xsd:string"/>
            <xsd:element name="type" type="xsd:string"/>
            <xsd:element name="repository-id" type="xsd:string"/>
          </xsd:sequence>
        </xsd:choice>
      </xsd:sequence>
    </xsd:choice>
  </xsd:complexType>
  
  <xsd:complexType name="settings">
    <xsd:sequence>
      <xsd:element name="overwrite-exec-responsible" type="xsd:boolean"/>
      <xsd:element name="optional-checkin" type="xsd:boolean"/>
      <xsd:element name="hide-exec-auto-checkin" type="xsd:boolean" maxOccurs="1" minOccurs="0"/>
      <xsd:element name="filter-sync-interval" type="xsd:integer"/>
      <xsd:element name="ignore-not-edited" type="xsd:boolean"/>
      <xsd:element name="ignore-not-planned" type="xsd:boolean"/>
      <xsd:element name="designers-may-manage-baselines" type="xsd:boolean"/>
      <xsd:element name="designers-may-import-baselines" type="xsd:boolean"/>
      <xsd:element name="only-admins-manage-udfs" type="xsd:boolean"/>
      <xsd:element name="variants-management-enabled" type="xsd:boolean"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="requirement-repositories">
    <xsd:sequence>
      <xsd:element name="requirement-repository" type="requirement-repository" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="requirement-repository">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="login" type="xsd:string"/>
      <xsd:element name="password" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="requirement-projects">
    <xsd:sequence>
      <xsd:element name="project" type="project" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="project" mixed="true">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="repository-ref" type="ref"/>
    </xsd:choice>
  </xsd:complexType>
  
  <xsd:complexType name="requirement-udfs">
    <xsd:sequence>
      <xsd:element name="udf" type="udf" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="udf">
    <xsd:sequence>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="type" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            0: single line text, 1: check box, 2: multi line text, 3: check list, 4: items list
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="repository-id" type="xsd:string" minOccurs="0"/>
      <xsd:element name="value" type="value" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--  test project roles                                                  --> 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <xsd:complexType name="userroles">
    <xsd:sequence>
      <xsd:element name="user" type="user" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="user" mixed="true">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="roles" type="roles"/>
    </xsd:choice>
  </xsd:complexType>
  
  <xsd:complexType name="roles">
    <xsd:sequence>
      <xsd:element name="role" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            tautema-test-manager, tautema-test-designer, tautema-test-implementer, tautema-tester
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="read-only" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation xml:lang="en">
          true, false
        </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--  test project user defined fields                                    --> 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <xsd:complexType name="UserDefinedFields">
    <xsd:sequence>
      <xsd:element name="UserDefinedField" type="UserDefinedField" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="UserDefinedField">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="ordering" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            a number (long)
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="mustField" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            1: true, 0: false
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="udfScopes" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            comma separated scopes of the UDF. Possible values: TestThemesInSpecification, TestCaseSetsInSpecification, TestCasesInSpecification, TestThemesInExecution, TestCaseSetsInExecution, TestCasesInExecution
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="udfType" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            0: textfield, 1: list of values, 2: check box
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="value" type="value" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="values">
    <xsd:sequence>
      <xsd:element name="value" type="value" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="value" mixed="true">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="undefined" type="undefined"/>
      <xsd:element name="type" type="xsd:string"/>
      <xsd:element name="ia-param-ref" type="ref"/>
      <xsd:element name="equivalence-class-ref" type="ref"/>
      <xsd:element name="instances-array-ref" type="ref"/>
      <xsd:element name="representative-ref" type="ref"/>
      <xsd:element name="dataType-ref" type="ref"/>
      <xsd:element name="representative" type="xsd:string"/>
    </xsd:choice>
  </xsd:complexType>
  
  <xsd:complexType name="undefined"/>
  
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--  test project user defined fields for the defects management systems --> 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <xsd:complexType name="DefectUserDefinedFields">
    <xsd:sequence>
      <xsd:element name="DefectUserDefinedField" type="DefectUserDefinedField" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="DefectUserDefinedField">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="ordering" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            a number (long)
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="mustField" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            1: true, 0: false
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="udfSyncOption" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            0: itb is sync master, 1: dms is sync master, 2: sync master depends on defect time stamps
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="udfType">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            0: textfield, 1: list of values, 2: check box
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="value" type="value" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--  test project keywords                                               --> 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <xsd:complexType name="keywords">
    <xsd:choice>
      <xsd:element name="keyword" type="keyword" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="keyword-ref" type="ref" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="named-keyword" type="xsd:string"/>
      <xsd:element name="named-variants-marker" type="xsd:string"/>
    </xsd:choice>
  </xsd:complexType>
  
  <xsd:complexType name="keyword">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="ref">
    <xsd:attribute name="pk" type="xsd:string" use="required"/>
  </xsd:complexType>
  
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--  test project labels                                                 --> 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <xsd:complexType name="labels">
    <xsd:sequence>
      <xsd:element name="public" type="visibilityGroup" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="private" type="visibilityGroup" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="label-ref" type="ref" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="visibilityGroup">
    <xsd:sequence>
      <xsd:element name="label" type="label" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="label">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="owner" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            the user login
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--  defects management settings                                         --> 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <xsd:complexType name="dm-settings">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="system" type="xsd:string"/>
      <xsd:element name="project" type="project"/>
      <xsd:element name="readlogin" type="xsd:string"/>
      <xsd:element name="firstsync" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            a date
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="syncinterval" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            in minutes
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="statusattribute" type="xsd:string"/>
      <xsd:element name="statussyncoption" type="xsd:string"/>
      <xsd:element name="statusdefaultvalue" type="xsd:string"/>
      <xsd:element name="priorityattribute" type="xsd:string"/>
      <xsd:element name="prioritysyncoption" type="xsd:string"/>
      <xsd:element name="prioritydefaultvalue" type="xsd:string"/>
      <xsd:element name="classattribute" type="xsd:string"/>
      <xsd:element name="classsyncoption" type="xsd:string"/>
      <xsd:element name="classdefaultvalue" type="xsd:string"/>
      <xsd:element name="status-mapping" type="status-mapping"/>
      <xsd:element name="priority-mapping" type="priority-mapping"/>
      <xsd:element name="class-mapping" type="class-mapping"/>
      <xsd:element name="user-mappings" type="user-mappings"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="status-mapping">
    <xsd:sequence>
      <xsd:element name="status" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="priority-mapping">
    <xsd:sequence>
      <xsd:element name="priority" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="class-mapping">
    <xsd:sequence>
      <xsd:element name="class" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="user-mappings">
    <xsd:sequence>
      <xsd:element name="user-mapping" type="user-mapping" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="user-mapping">
    <xsd:sequence>
      <xsd:element name="itblogin" type="xsd:string"/>
      <xsd:element name="dmlogin" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--  test project defects                                                --> 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <xsd:complexType name="error-ids">
    <xsd:choice  minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="error-id" type="error-id"/>
      <xsd:element name="error-id-ref" type="ref"/>
    </xsd:choice>
  </xsd:complexType>
  
  <xsd:complexType name="error-id">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="title" type="xsd:string"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="status" type="xsd:string"/>
      <xsd:element name="priority" type="xsd:string"/>
      <xsd:element name="classification" type="xsd:string"/>
      <xsd:element name="tester" type="xsd:string"/>
      <xsd:element name="lastEdited" type="xsd:string"/>
      <xsd:element name="created" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            a date
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="used-in-cycles" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="lastEditor" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            user login (or null)
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="dmSystem" type="xsd:string"/>
      <xsd:element name="dmProject" type="xsd:string"/>
      <xsd:element name="identicalVersionPK" type="xsd:string"/>
      <xsd:element name="error-id-references" type="error-id-references"/>
      <xsd:element name="udfs" type="udfs" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="old-versions" type="old-versions" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="error-id-references">
    <xsd:sequence>
      <xsd:element name="error-id-reference" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="udfs">
    <xsd:sequence>
      <xsd:element name="udf" type="udf" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="old-versions">
    <xsd:sequence>
      <xsd:element name="version" type="version" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="version" mixed="true">
    <xsd:sequence minOccurs="0">
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="pk" type="xsd:string"/>
        <xsd:element name="name" type="xsd:string"/>
        <xsd:element name="user" type="user"/>
        <xsd:element name="comment" type="xsd:string"/>
        <xsd:element name="date" type="xsd:string"/>
        <xsd:element name="status" type="xsd:string"/>
        <xsd:element name="verdict" type="xsd:string"/>
        <xsd:element name="exec-status" type="xsd:string"/>
        <xsd:element name="type" type="xsd:string"/>
        <xsd:element name="labels" type="labels"/>
        <xsd:element name="reference" type="reference"/>
      </xsd:choice>
      <xsd:choice minOccurs="0">
        <xsd:element name="error-id" type="error-id"/>
        <xsd:element name="element" type="element"/>
        <xsd:element name="specification" type="specification"/>
        <xsd:element name="automation" type="automation"/>
        <xsd:element name="execution" type="execution"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--  test project references                                             --> 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <xsd:complexType name="references">
    <xsd:choice  minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="reference" type="reference"/>
      <xsd:element name="reference-ref" type="ref"/>
      <xsd:element name="reference-name" type="xsd:string"/>
      <xsd:element name="type" type="xsd:string"/>
    </xsd:choice>
  </xsd:complexType>
  
  <xsd:complexType name="reference">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="filename" type="xsd:string"/>
      <xsd:element name="type" type="xsd:string"/>
      <xsd:element name="version" type="xsd:string"/>
      <xsd:element name="attachment-pk" type="xsd:string" minOccurs="0"/>
      <xsd:element name="attachment-path" type="xsd:string" minOccurs="0"/>
      <xsd:element name="attachment-filename" type="xsd:string" minOccurs="0"/>
      <xsd:element name="attachment-lastedited" type="xsd:string" minOccurs="0"/>
      <xsd:element name="attachment-lasteditor" type="xsd:string" minOccurs="0"/>
      <xsd:element name="attachment-file-pk" type="xsd:string" minOccurs="0"/>
      <xsd:element name="old-versions" type="old-versions" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--  requirement baselines                                               --> 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <xsd:complexType name="baselines">
    <xsd:sequence>
      <xsd:element name="baseline" type="baseline" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="baseline">
    <xsd:choice>
      <xsd:sequence>
        <xsd:element name="details" type="details"/>
        <xsd:element name="children" type="children"/>
      </xsd:sequence>
      <xsd:sequence>
        <xsd:element name="project-pk-ref" type="ref"/>
        <xsd:element name="project" type="project"/>
        <xsd:element name="name" type="xsd:string"/>
      </xsd:sequence>
    </xsd:choice>
  </xsd:complexType>
  
  <xsd:complexType name="children">
    <xsd:choice>
      <xsd:element name="requirement-node" type="requirement-node" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="testtheme" type="testtheme"/>
        <xsd:element name="testcase" type="testcase"/>
      </xsd:choice>
    </xsd:choice>
  </xsd:complexType>
  
  <xsd:complexType name="requirement-node">
    <xsd:sequence>
      <xsd:element name="requirement-pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="id" type="xsd:string"/>
      <xsd:element name="version" type="version"/>
      <xsd:element name="type" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            0: requirement, 1: requirement type (folder)
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="children" type="children"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--  data of the different test object versions, test cycles, test       -->
  <!--  themes tree and test elements                                       --> 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <xsd:complexType name="testobjectversions">
    <xsd:sequence>
      <xsd:element name="testobjectversion" type="testobjectversion" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="testobjectversion">
    <xsd:sequence>
    	<xsd:element name="pk" type="xsd:string" />
    	<xsd:element name="id" type="xsd:string" />
        <xsd:element name="startdate" type="xsd:string" />
        <xsd:element name="enddate" type="xsd:string" />
        <xsd:element name="status" type="xsd:string" />
        <xsd:element name="createdTime" type="xsd:string" />
    	<xsd:element name="visibleForTesters" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        <xsd:element name="cloningVisibility" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        <xsd:element name="baseTOV" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        <xsd:element name="sourceTOV-ref" type="ref" maxOccurs="1" minOccurs="0"/>
        <xsd:element name="variantsDefinition-ref" type="ref" maxOccurs="1" minOccurs="0"/>
        <xsd:element name="description" type="xsd:string"/>
        <xsd:element name="html-description" type="xsd:string"/>
        <xsd:element name="testingIntelligence" type="xsd:string" />
    	<xsd:element name="baselines" type="baselines" />
        <xsd:element name="placeholders" type="placeholders"/>
        <xsd:element name="variantsDefinitions" type="variantsDefinitions"/>
        <xsd:element name="variantsMarkers" type="variantsMarkers"/>
        <xsd:element name="placeholderValues" type="placeholderValues"/>
        <xsd:element name="testcycles" type="testcycles" />
    	<xsd:element name="testthemes" type="testthemes" />
    	<xsd:element name="test-elements" type="test-elements" />
    </xsd:sequence>
  </xsd:complexType>

    <xsd:complexType name="placeholders">
        <xsd:sequence>
            <xsd:element name="placeholder" type="placeholder" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="placeholder">
        <xsd:sequence>
            <xsd:element name="pk" type="xsd:string"/>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="description" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="variantsDefinitions">
        <xsd:sequence>
            <xsd:element name="variantsDefinition" type="variantsDefinition" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="variantsDefinition">
        <xsd:sequence>
            <xsd:element name="pk" type="xsd:string"/>
            <xsd:element name="name" type="xsd:string"/>
            <xsd:element name="status" type="xsd:string"/>
            <xsd:element name="description" type="xsd:string"/>
            <xsd:element name="html-description" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

  <xsd:complexType name="variantsMarkers">
    <xsd:sequence>
      <xsd:element name="variantsMarker" type="variantsMarker" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="variantsMarker">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="variantsDefinition-ref" type="ref"/>
    </xsd:sequence>
  </xsd:complexType>

    <xsd:complexType name="placeholderValues">
        <xsd:sequence>
            <xsd:element name="placeholderValue" type="placeholderValue" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="placeholderValue">
        <xsd:sequence>
            <xsd:element name="pk" type="xsd:string" />
            <xsd:element name="placeholder-ref" type="ref" />
            <xsd:element name="variantsDefinition-ref" type="ref"/>
            <xsd:element name="value" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="testcycles">
    <xsd:sequence>
      <xsd:element name="testcycle" type="testcycle" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="testcycle">
    <xsd:sequence>
    	<xsd:element name="pk" type="xsd:string" />
    	<xsd:element name="name" type="xsd:string" />
    	<xsd:element name="createdTime" type="xsd:string" />
        <xsd:element name="startdate" type="xsd:string" />
        <xsd:element name="enddate" type="xsd:string" />
        <xsd:element name="status" type="xsd:string" />
        <xsd:element name="visibleForTesters" type="xsd:string" maxOccurs="1" minOccurs="0"/>
        <xsd:element name="description" type="xsd:string"/>
        <xsd:element name="html-description" type="xsd:string"/>
        <xsd:element name="testingIntelligence" type="xsd:string" />
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- =================  test themes data ================ -->
  <xsd:complexType name="testthemes">
    <xsd:sequence>
      <xsd:element name="testtheme" type="testtheme" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:group name="test-common-elements">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="order-pos" type="xsd:string"/>
      <xsd:element name="uid" type="xsd:string" minOccurs="0"/>
      <xsd:element name="specification" type="specification"/>
      <xsd:element name="automation" type="automation"/>
      <xsd:element name="execution-cycles" type="execution-cycles"/>
    </xsd:sequence>
  </xsd:group>
  
  <xsd:complexType name="testtheme">
    <xsd:sequence>
      <xsd:group ref="test-common-elements"/>
      <xsd:element name="children" type="children"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="testcase">
    <xsd:group ref="test-common-elements"/>
  </xsd:complexType>
  
  <xsd:complexType name="specification">
    <xsd:sequence>
      <xsd:element name="details" type="details"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="html-description" type="xsd:string"/>
      <xsd:element name="review-comments" type="xsd:string" minOccurs="0"/>
      <xsd:element name="html-review-comments" type="xsd:string" minOccurs="0"/>
      <xsd:element name="keywords" type="keywords"/>
      <xsd:element name="edited-requirements" type="requirement-refs"/>
      <xsd:element name="non-edited-requirements" type="requirement-refs"/>
      <xsd:element name="userDefinedFields" type="userDefinedFields"/>
      <xsd:element name="interaction" type="interaction" minOccurs="0"/>
      <xsd:element name="parameter-combinations" type="parameter-combinations-spec" minOccurs="0"/>
      <xsd:element name="old-versions" type="old-versions" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="requirement-refs">
    <xsd:sequence>
      <xsd:element name="requirement-ref" type="ref" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="userDefinedFields">
    <xsd:sequence>
      <xsd:element name="userDefinedField" type="userDefinedField" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="userDefinedField">
    <xsd:sequence>
      <xsd:element name="udfpk" type="xsd:string"/>
      <xsd:element name="value" type="value"/>
      <xsd:element name="udfName" type="xsd:string"/>
      <xsd:element name="udfType" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            0: textfield, 1: list of values, 2: check box
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ordering" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            a number (long)
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="parameter-combinations-spec">
    <xsd:sequence>
      <xsd:element name="parameter-combination" type="parameter-combination-spec" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="parameter-combination-spec">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="comment" type="xsd:string"/>
      <xsd:element name="html-comment" type="xsd:string"/>
      <xsd:element name="ordering" type="xsd:string"/>
      <xsd:element name="uid" type="xsd:string"/>
      <xsd:element name="keywords" type="keywords"/>
      <xsd:element name="edited-requirements" type="requirement-refs"/>
      <xsd:element name="non-edited-requirements" type="requirement-refs"/>
      <xsd:element name="userDefinedFields" type="userDefinedFields"/>
      <xsd:element name="values" type="values"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="parameter-combinations-exec">
    <xsd:sequence>
      <xsd:element name="parameter-combination" type="parameter-combination-exec" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="parameter-combination-exec">
    <xsd:sequence>
      <xsd:element name="specification-parameter-combination-ref" type="ref"/>
      <xsd:element name="status" type="xsd:string"/>
      <xsd:element name="execution-status" type="xsd:string"/>
      <xsd:element name="verdict" type="xsd:string"/>
      <xsd:element name="comment" type="xsd:string"/>
      <xsd:element name="html-comment" type="xsd:string"/>
      <xsd:element name="ordering" type="xsd:string"/>
      <xsd:element name="uid" type="xsd:string"/>
      <xsd:element name="tester" type="xsd:string"/>
      <xsd:element name="actual-time" type="xsd:string"/>
      <xsd:element name="planned-time" type="xsd:string"/>
      <xsd:element name="error-ids" type="error-ids"/>
      <xsd:element name="keywords" type="keywords"/>
      <xsd:element name="userDefinedFields" type="userDefinedFields"/>
      <xsd:element name="values" type="values"/>
      <xsd:element name="references" type="references"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="interaction">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="uid" type="xsd:string" minOccurs="0"/>
      <xsd:element name="locker" type="xsd:string"/>
      <xsd:element name="status" type="xsd:string"/>
      <xsd:element name="default-call-type" type="default-call-type"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="html-description" type="xsd:string"/>
      <xsd:element name="historyPK" type="xsd:string"/>
      <xsd:element name="identicalVersionPK" type="xsd:string"/>
      <xsd:element name="references" type="references"/>
      <xsd:element name="preconditions" type="conditions" minOccurs="0"/>
      <xsd:element name="postconditions" type="conditions" minOccurs="0"/>
      <xsd:element name="parameters" type="parameters" minOccurs="0"/>
      <xsd:element name="call-sequence" type="call-sequence" minOccurs="0"/>
      <xsd:element name="identical-version-metaword-mapping" type="identical-version-metaword-mapping" minOccurs="0"/>
      <xsd:element name="old-versions" type="old-versions" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="automation">
    <xsd:sequence>
      <xsd:element name="details" type="details"/>
      <xsd:element name="script-editor" type="xsd:string"/>
      <xsd:element name="script-template" type="xsd:string"/>
      <xsd:element name="old-versions" type="old-versions" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="execution-cycles">
    <xsd:sequence>
      <xsd:element name="execution" type="execution" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="execution">
    <xsd:sequence>
      <xsd:element name="testcycle-ref" type="ref"/>
      <xsd:element name="specification-ref" type="ref"/>
      <xsd:element name="details" type="details"/>
      <xsd:element name="execution-status" type="xsd:string"/>
      <xsd:element name="verdict" type="xsd:string"/>
      <xsd:element name="planned-time" type="xsd:string"/>
      <xsd:element name="actual-time" type="xsd:string"/>
      <xsd:element name="script-path" type="xsd:string"/>
      <xsd:element name="execution-engine" type="xsd:string"/>
      <xsd:element name="protocol-location" type="xsd:string"/>
      <xsd:element name="verdict-evaluator" type="xsd:string"/>
      <xsd:element name="comments" type="xsd:string"/>
      <xsd:element name="html-comments" type="xsd:string"/>
      <xsd:element name="keywords" type="keywords"/>
      <xsd:element name="userDefinedFields" type="userDefinedFields"/>
      <xsd:element name="exec-logfiles" type="exec-logfiles"/>
      <xsd:element name="parameter-combinations" type="parameter-combinations-exec" minOccurs="0"/>
      <xsd:element name="old-versions" type="old-versions" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="exec-logfiles">
    <xsd:sequence>
      <xsd:element name="exec-logfile" type="exec-logfile" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="exec-logfile">
    <xsd:sequence>
      <xsd:element name="filename" type="xsd:string"/>
      <xsd:element name="type" type="xsd:string"/>
      <xsd:element name="file-pk" type="xsd:string"/>
      <xsd:element name="result-file-pk" type="xsd:string"/>
      <xsd:element name="charset" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- =================  test elements  ================ -->
  <xsd:complexType name="test-elements">
    <xsd:sequence>
      <xsd:element name="element" type="element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="element">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="uid" type="xsd:string" minOccurs="0"/>
      <xsd:element name="locker" type="xsd:string"/>
      <xsd:element name="status" type="xsd:string" minOccurs="0"/>
      <xsd:element name="default-call-type" type="default-call-type" minOccurs="0"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="html-description" type="xsd:string"/>
      <xsd:element name="historyPK" type="xsd:string"/>
      <xsd:element name="identicalVersionPK" type="xsd:string"/>
      <xsd:element name="references" type="references" minOccurs="0"/>
      <xsd:element name="fields" type="fields" minOccurs="0"/>
      <xsd:element name="instances-arrays" type="instances-arrays" minOccurs="0"/>
      <xsd:element name="equivalence-classes" type="equivalence-classes" minOccurs="0"/>
      <xsd:element name="identical-version-datatype-mapping" type="identical-version-datatype-mapping" minOccurs="0"/>
      <xsd:element name="preconditions" type="conditions" minOccurs="0"/>
      <xsd:element name="postconditions" type="conditions" minOccurs="0"/>
      <xsd:element name="parameters" type="parameters" minOccurs="0"/>
      <xsd:element name="call-sequence" type="call-sequence" minOccurs="0"/>
      <xsd:element name="identical-version-metaword-mapping" type="identical-version-metaword-mapping" minOccurs="0"/>
      <xsd:element name="old-versions" type="old-versions" minOccurs="0"/>
      <xsd:element name="element" type="element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="type" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="subdivision"/>
          <xsd:enumeration value="datatype"/>
          <xsd:enumeration value="interaction"/>
          <xsd:enumeration value="condition"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  
  <!-- =================  data type specific data  ================ -->
  <xsd:complexType name="fields">
    <xsd:sequence>
      <xsd:element name="field" type="field" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="field">
    <xsd:sequence>
      <xsd:element name="sequence-pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="datatype-ref" type="ref">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            pk of the data type, -1 by generic parameters
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="definition-type" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            0: detailed, 2: array, 3: atomic. for interaction always 0. Test case interactions can have the values 2 or 3
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="equivalence-classes">
    <xsd:sequence>
      <xsd:element name="equivalence-class" type="equivalence-class" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="equivalence-class">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="ordering" type="xsd:string"/>
      <xsd:element name="default-representative-ref" type="ref"/>
      <xsd:element name="representatives" type="representatives"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="representatives">
    <xsd:sequence>
      <xsd:element name="representative" type="representative" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="representative">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="ordering" type="xsd:string"/>
      <xsd:element name="placeholder-ref" type="ref" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="values" type="values"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="instances-arrays">
    <xsd:sequence>
      <xsd:element name="instances-array" type="instances-array" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="instances-array">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="ordering" type="xsd:string"/>
      <xsd:element name="instances" type="instances"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="instances">
    <xsd:sequence>
      <xsd:element name="instance" type="instance" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="instance">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="ordering" type="xsd:string"/>
      <xsd:element name="values" type="values"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="identical-version-datatype-mapping">
    <xsd:sequence>
      <xsd:element name="identical-version-datatype" type="identical-version-datatype" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="identical-version-datatype">
    <xsd:attribute name="workPK" type="xsd:string" use="required"/>
    <xsd:attribute name="versPK" type="xsd:string" use="required"/>
    <xsd:attribute name="isChangedDefType" type="xsd:boolean" use="required"/>
  </xsd:complexType>
  
  <!-- =================  interaction specific data  ================ -->
  <xsd:complexType name="default-call-type">
    <xsd:attribute name="name" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Flow"/>
          <xsd:enumeration value="Check"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="value" type="binaryDigit" use="required"/>
  </xsd:complexType>
  
  <xsd:simpleType name="binaryDigit">
    <xsd:restriction base="xsd:unsignedByte">
      <xsd:enumeration value="0"/>
      <xsd:enumeration value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  
  <xsd:complexType name="conditions">
    <xsd:sequence>
      <xsd:element name="condition" type="condition" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="condition">
    <xsd:sequence>
      <xsd:element name="condition-ref" type="ref"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="parameters">
    <xsd:sequence>
      <xsd:element name="parameter" type="parameter" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="parameter">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="datatype-ref" type="ref">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            pk of the data type, -1 by generic parameters
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="definition-type" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            0: detailed, 2: array, 3: atomic. for interaction always 0. Test case interactions can have the values 2 or 3
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="use-type" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            0: call by reference, 1: call by value. For test case interaction always 1
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="call-sequence">
    <xsd:sequence>
      <xsd:element name="interaction-call" type="interaction-call" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="interaction-call">
    <xsd:sequence>
      <xsd:element name="interaction-ref" type="ref"/>
      <xsd:element name="description" type="xsd:string"/>
      <xsd:element name="html-description" type="xsd:string"/>
      <xsd:element name="comment" type="xsd:string"/>
      <xsd:element name="html-comment" type="xsd:string"/>
      <xsd:element name="type" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            0: flow, 1: check
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="phase">
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Setup"/>
            <xsd:enumeration value="TestStep"/>
            <xsd:enumeration value="Teardown"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="parameter-values" type="parameter-values"/>
      <xsd:element name="marker" type="marker" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="parameter-values">
    <xsd:sequence>
      <xsd:element name="call-parameter" type="call-parameter" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="marker">
    <xsd:choice>
      <xsd:element name="marker-ref" type="ref" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="named-variants-marker" type="xsd:string"/>
    </xsd:choice>
  </xsd:complexType>
  
  <xsd:complexType name="call-parameter">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="parameter-datatype-ref" type="ref"/>
      <xsd:element name="parent-parameter-ref" minOccurs="0"/>
      <xsd:element name="sequence-path" type="sequence-path" minOccurs="0"/>
      <xsd:element name="instances-array-ref" type="ref" minOccurs="0"/>
      <xsd:element name="representative-ref" type="ref" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="type" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="parameter"/>
          <xsd:enumeration value="instances-array"/>
          <xsd:enumeration value="representative"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>
  
  <xsd:complexType name="sequence-path">
    <xsd:sequence>
      <xsd:element name="sequence-ref" type="ref" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="identical-version-metaword-mapping">
    <xsd:sequence>
      <xsd:element name="identical-version-metaword" type="identical-version-metaword" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
 <xsd:complexType name="identical-version-metaword">
    <xsd:sequence>
    	<xsd:element name="identical-version-metaword-param" type="identical-version-metaword-param" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="workPK" type="xsd:string" use="required"/>
    <xsd:attribute name="versPK" type="xsd:string" use="required"/>
  </xsd:complexType>
  
  <xsd:complexType name="identical-version-metaword-param">
  	<xsd:attribute name="workParamPK" type="xsd:string" use="required"/>
    <xsd:attribute name="versParamPK" type="xsd:string" use="required"/>
  </xsd:complexType>  

  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--  date of the referenced requirements                                 --> 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <xsd:complexType name="requirements">
    <xsd:sequence>
      <xsd:element name="requirement" type="requirement" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="requirement">
    <xsd:sequence>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="name" type="xsd:string"/>
      <xsd:element name="id" type="xsd:string"/>
      <xsd:element name="extended-id" type="xsd:string"/>
      <xsd:element name="version" type="version"/>
      <xsd:element name="owner" type="xsd:string"/>
      <xsd:element name="status" type="xsd:string"/>
      <xsd:element name="priority" type="xsd:string"/>
      <xsd:element name="repository-id" type="xsd:string"/>
      <xsd:element name="udfs" type="udfs" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--  names of referenced users                                           --> 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <xsd:complexType name="referenced-user-names">
    <xsd:sequence minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="user-name" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            user login
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="user-pk" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation xml:lang="en">
            number (long)
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!--  errors and warnings occured in the project export                   --> 
  <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <xsd:complexType name="errors">
    <xsd:sequence>
      <xsd:element name="error" type="message" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="warnings">
    <xsd:sequence>
      <xsd:element name="warning" type="message" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="message">
    <xsd:sequence>
      <xsd:element name="object" type="xsd:string"/>
      <xsd:element name="pk" type="xsd:string"/>
      <xsd:element name="message" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>